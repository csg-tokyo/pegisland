# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  node: circleci/node@4.7

build-and-test:
  # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
  # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
  # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
  docker:
    - image: cimg/node:16.10
  steps:
    - checkout
    - browser-tools/install-browser-tools
    - run: npm install
    - run:
        name: 'JavaScript Linter'
        command: eslint --format junit -o reports/junit/eslint.xml
    - run:
        name: 'Run Jest and Collect Coverage Reports'
        command: jest
        environment:
          JEST_JUNIT_OUTPUT_DIR: 'reports/junit'
    - store_test_results:
        path: reports/junit
    - store_artifacts:
        path: coverage

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
